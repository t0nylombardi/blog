---
import type {CollectionEntry} from 'astro:content'
import BaseHead from '../components/BaseHead.astro'
import Nav from '../components/Nav.astro'
import Footer from '../components/Footer.astro'
import { ViewTransitions } from 'astro:transitions'

import FormattedDate from '../components/FormattedDate.astro'

type Props = CollectionEntry<'blog'>['data']

const {title, description, date, originalDatePublished, heroImage, author} = Astro.props
---

<script>
  let copyButtonLabel = 'Copy Code'
  let codeBlocks = Array.from(document.querySelectorAll('pre'))

  for (let codeBlock of codeBlocks) {
    let wrapper = document.createElement('div')
    wrapper.style.position = 'relative'

    let copyButton = document.createElement('button')
    copyButton.className = 'copy-code'
    copyButton.innerHTML = copyButtonLabel

    codeBlock.setAttribute('tabindex', '0')
    codeBlock.appendChild(copyButton)
    // wrap codebock with relative parent element
    codeBlock?.parentNode?.insertBefore(wrapper, codeBlock)
    wrapper.appendChild(codeBlock)

    copyButton.addEventListener('click', async () => {
      await copyCode(codeBlock, copyButton)
    })
  }

  async function copyCode(block, button) {
    let code = block.querySelector('code')
    let text = code.innerText

    await navigator.clipboard.writeText(text)

    // visual feedback that task is completed
    button.innerText = 'Code Copied'

    setTimeout(() => {
      button.innerText = copyButtonLabel
    }, 700)
  }
</script>

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <ViewTransitions />
  </head>

  <body class="bg-blog-blue">
    <Nav />
    <div class="mb-10 max-w-screen-2xl container-2xl mx-auto bg-blog-blue py-20">
      <main class="overflow-auto">
        <div class="container mx-auto overflow-auto">
          <div class="flex flex-col text-center w-full mt-10">
            <h1 class="text-[2rem] md:text-[4.5rem] py-4 font-medium title-font text-gray-100">
              {title}
            </h1>
            <div class="m-4 text-gray-100 flex justify-center">
              <h2 class="text-[1rem] md:text-[1.5rem] w-full font-normal ">{description}</h2>
            </div>
            <h4 class=" text-azure/50 tracking-widest text-sm font-light title-font mb-1">
              by: {author} on {`date` ? <FormattedDate date={date} /> : `originalDatePublished`}
            </h4>
          </div>
          <div class="my-16 object-contain object-center">
            {heroImage && (
              <img
                class="hidden w-max md:block "
                src={heroImage}
                alt={title}
              />
            )}
          </div>
        </div>
        <article class="container-sm mx-auto w-full mt-16 mb-8 px-[4rem] text-gray-100">
          <slot />
        </article>
      </main>
    </div>
    <Footer />
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-H56C6BEBLS"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-H56C6BEBLS');
    </script>
  </body>
</html>

<style>

</style>

